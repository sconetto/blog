{"version":3,"sources":["webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Bio/Bio.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/articles/Articles.Hero.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/templates/articles.template.tsx"],"names":["Bio","_ref","author","___EmotionJSX","BioContainer","BioAvatar","as","authorsPage","Link","to","slug","data-a11y","aria-label","BioAvatarInner","RoundedImage","src","avatar","medium","BioText","dangerouslySetInnerHTML","__html","bio","_styled","target","name","styles","p","theme","colors","accent","Image","grey","ArticlesHero","authors","gridLayout","hasSetGridLayout","setGridLayout","useContext","GridLayoutContext","hero","useStaticQuery","site","edges","node","siteMetadata","tilesIsActive","featuredAuthor","find","featured","Error","Section","relative","id","HeadingContainer","style","maxWidth","HeroHeading","heading","SubheadingContainer","GridControlsContainer","GridButton","onClick","active","title","Icons","Tiles","Rows","mediaqueries","desktop","tablet","phablet","primary","hover","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","ArticlesList","ArticlesPaginator","show","pageCount","Paginator","ArticlesGradient","gradient","colorModeTransition"],"mappings":"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","file":"component---node-modules-narative-gatsby-theme-novela-src-templates-articles-template-tsx-22877eca7156c31528df.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Image from '@components/Image';\nimport { IAuthor } from '@types';\n\nconst Bio: React.FC<IAuthor> = ({ author }) => {\n  return (\n    <BioContainer>\n      <BioAvatar\n        as={author.authorsPage ? Link : 'div'}\n        to={author.slug}\n        data-a11y=\"false\"\n        aria-label=\"Author's bio\"\n      >\n        <BioAvatarInner>\n          <RoundedImage src={author.avatar.medium} />\n        </BioAvatarInner>\n      </BioAvatar>\n      <BioText dangerouslySetInnerHTML={{ __html: author.bio }} />\n    </BioContainer>\n  );\n};\n\nexport default Bio;\n\nconst BioContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  left: -10px;\n`;\n\nconst BioAvatar = styled.div`\n  display: block;\n  position: relative;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  margin: 10px 26px 10px 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nconst RoundedImage = styled(Image)`\n  border-radius: 50%;\n`;\n\nconst BioAvatarInner = styled.div`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  overflow: hidden;\n`;\n\nconst BioText = styled.p`\n  max-width: 430px;\n  font-size: 14px;\n  line-height: 1.45;\n  color: ${p => p.theme.colors.grey};\n\n  a {\n    color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Section from '@components/Section';\nimport Bio from '@components/Bio';\nimport Icons from '@icons';\nimport mediaqueries from '@styles/media';\nimport { IAuthor } from '@types';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<IAuthor> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(\n    GridLayoutContext,\n  );\n\n  const results = useStaticQuery(authorQuery);\n  const hero = results.site.edges[0].node.siteMetadata.hero;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n  const featuredAuthor = authors.find(author => author.featured);\n\n  if (!featuredAuthor) {\n    throw new Error(`\n      No featured Author found.\n      Please ensure you have at least featured Author.\n  `);\n  }\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\n      </HeadingContainer>\n      <SubheadingContainer>\n        <Bio author={featuredAuthor} />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default ArticlesHero;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.primary};\n\n  a {\n    color: ${p => p.theme.colors.accent};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.accent};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.primary};\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport ArticlesHero from \"../sections/articles/Articles.Hero\";\nimport ArticlesList from \"../sections/articles/Articles.List\";\n\nimport { Template } from \"@types\";\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const authors = pageContext.additionalContext.authors;\n\n  return (\n    <Layout>\n      <SEO pathname={location.pathname} />\n      <ArticlesHero authors={authors} />\n      <Section narrow>\n        <ArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n      <ArticlesGradient />\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n\nconst ArticlesGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n"],"sourceRoot":""}